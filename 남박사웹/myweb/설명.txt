#pegination
#페이지번호를 구현하는 방법 

pageblock-

라이브러리가 있지만 사용하지않고 직접 구현함 

----페이지 설정전에---------

@app.route("/list")
def lists():
    #페이지값 값이 없는 경우 기본값은 1
    page = request.args.get("page", default=1, type=int)
    #한페이지당 몇개의 게시물을 룰력할지
    limit = request.args.get("limit", 10, type=int)

    #게시물의 총 갯수
    tot_count = 


    board = mongo.db.board
    datas = board.find({}).skip((page - 1) * limit).limit(limit)
    #limit디폴트값이 10개니까 앞 10개 없애고 10개로 제한 
    return render_template("list.html", datas = datas)


-----------------페이지 설정후------------------



block start 1페이지 block last 5 페이지 블럭사이즈는 5까지만 
실제데이터의 갯수는 4페이지까지 없는 경우 




<select name="search" id="search">
    <option value="">검색대상</option>
    <option value="0">제목</option>
    <option value="1">내용</option>
    <option value="2">제목+내용</option>
    <option value="3">작성자</option>
</select>
<input type="text" name="keyword" id="keyword">
<input type="button" value="검색" onclick="search()">


<script>
    function search(){
        var v_search = document.getElementById("search").value;
        var v_keyword = document.getElementById("keyword").value;
    
        if(v_search == "" || v_keyword == "" ){
            return false;
        }else{
            self.location.href="{{url_for('lists')}}?search="+v_search+"&keyword="+v_keyword;
        }
    }

</script>


사용자가 onclick하면 search()함수가 수행
값과 키워드 값을 v_keyword에 담아서 존재하면 브라우저에 링크를
lists함수가 가르치큰ㄴ url_fo로 파라미터를 넘겨서 




네트워크 프로그램은
서버와 클라이언트 프로그램은

웹서버는 
클라이언트가 요청하면 서버는 정보를 제공하고 접속을 종료함
그러므로 클라이언트를 특정할수 없음
그러므로 클라이언트를 특정할수있게하는 게 
쿠키와 세션인데

쿠키는 어떤데이터를 클라이언트에 저장 - 덜 안정적 -보안에 취약 -암호화취약
세션은 서버에 저장 
